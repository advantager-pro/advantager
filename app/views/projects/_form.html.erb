<%= error_messages_for 'project' %>
<% evm_checked_css_class = "last-visible_field-checked-because-of-evm_field" %>
<!--[form:project]-->

<div class="floating-field">
  <%= f.label :name, req_field(:name), class: "#{@project.name.present? ? '' : 'hidden'}" %>
  <%= f.text_field :name, placeholder: req_field(:name), no_label: true, :required => true, :size => 60, class: '' %>
</div>
<div class="floating-field">
  <%= f.label :identifier, req_field(:identifier), class: "#{@project.identifier.present? ? '' : 'hidden'}" %>
  <%= f.text_field :identifier, placeholder: req_field(:identifier), no_label: true, :required => true, :size => 60, :disabled => @project.identifier_frozen?, :maxlength => Project::IDENTIFIER_MAX_LENGTH %>
</div>

<% unless @project.identifier_frozen? %>
  <em id="identifier-info" class="info"><%= l(:text_length_between, :min => 1, :max => Project::IDENTIFIER_MAX_LENGTH) %> <%= l(:text_project_identifier_info).html_safe %></em>
<% end %>

<div class="floating-field textarea">
  <%= f.label :description, placeholder: I18n.t!('field_description'), class: "#{@project.identifier.present? ? '' : 'hidden'}" %>
  <%= f.text_area :description, no_label: true, placeholder: :description, :rows => 8, :class => 'wiki-edit' %>
</div>


<div id="project_inner_fields"  class="box">

  <fieldset id="constitutional-act"><legend><%= l(:field_constitutional_act) %></legend>
  <div class="constitutional-act-form">
    <% if @project.constitutional_act_file_name.nil? %>
      <%= f.file_field :constitutional_act, label: I18n.t!('button_add')  %>
    <% else %>
      <a target="_blank" href="<%= @project.constitutional_act.url(:original, false)%>"><%= @project.constitutional_act_file_name %></a>
      </br>
      <%= f.file_field :constitutional_act, label: I18n.t!('button_update') %>
    <% end %>
  </div>
  </fieldset>


  <% unless @project.allowed_parents.compact.empty? %>
      <div id="parent_id_container" class="floating-field">
        <%= label(:project, :parent_id, l(:field_parent)) %>
        <%= parent_project_select_tag(@project) %>
      </div>
  <% end %>

  <% if @project.safe_attribute? 'inherit_members' %>
  <p class="floating-option"><%= f.check_box :inherit_members %></p>
  <% end %>

  <p class="floating-option"><%= f.check_box :is_public %></p>

  <% if @project.safe_attribute?('default_version_id') && (default_version_options = project_default_version_options(@project)).present? %>
    <p class="floating-option"><%= f.select :default_version_id, project_default_version_options(@project), prompt: I18n.t!('field_default_version')  %></p>
  <% end %>

  <%= wikitoolbar_for 'project_description' %>

  <% @project.custom_field_values.each do |value| %>
    <p class="floating-option"><%= custom_field_tag_with_label :project, value %></p>
  <% end %>
  <%= call_hook(:view_projects_form, :project => @project, :form => f) %>

  <div class="clearfix"></div>
  <div class="floating-field">
    <%= f.label :homepage, class: "#{@project.homepage.present? ? '' : 'hidden'}" %>
    <%= f.text_field :homepage, placeholder: :homepage, no_label: true, :size => 60 %>
  </div>
</div>

<fieldset class="tabular float"><legend><%= l(:label_earned_value) %></legend>
  <div>
    <div class="splitcontentleft">
      <div id="evm_field_selector">
        <div class="floating-field auto left">
          <%= f.label :evm_field, req_field(:evm_field), class: "#{@project.evm_field.present? ? '' : 'hidden'}" %>
          <%= f.select :evm_field, options_for_select(Project.available_fields.map{|field| [t("field_#{field}"), field] }, selected: (@project.evm_field || 'cost' )), no_label: true, id: 'project_evm_field' %>
        </div>
      </div>
    </div>
    <div class="splitcontentright">
      <div class="floating-field left">
        <%= f.label :evm_frequency, req_field(:evm_frequency), class: "#{@project.evm_frequency.present? ? '' : 'hidden'}" %>
        <%= f.number_field :evm_frequency, placeholder: req_field(:evm_frequency), no_label: true, required: true, size: 60 %>
      </div>
    </div>
    <div class="clearfix"></div>
  </div>
</fieldset>

<fieldset class="tabular float">
  <legend>
    <%= I18n.t!('evm.other_fields_to_keep_log') %>
    <span class="icon-info-circle large-explanation"  tooltip='<%= I18n.t!('evm.other_fields_to_keep_log_info') %>'></span>
  </legend>
  <div>
    <% Project.available_fields.each do | field | %>
      <p class="visible-field-container" data-visible-field-container="<%= field %>">
        <label>
          <%= t("field_#{field}") %>
          <% if @project.evm_field == field %>
            <%= check_box_tag 'project[visible_fields][]', field, true, id: "visible_fields_#{field}", data: { visible_field: field }, class: evm_checked_css_class %>
          <% else %>
            <%= check_box_tag 'project[visible_fields][]', field, @project.visible_fields.include?(field), id: "visible_fields_#{field}", data: { visible_field: field } %>
          <% end %>
        </label>
      </p>
    <% end %>
  </div>

  <div id="custom_field_container" >
    <div class="floating-field left mid">
      <%= f.label :custom_unity %>
      <%= f.text_field :custom_unity, placeholder: :custom_unity, no_label: true, size: 60 %>
    </div>
  </div>
  <div id="cost_field_container" >
    <p class="floating-field">
      <%= f.label :currency, req_field(:currency) %>
      <%= f.select :currency, Money::Currency.table.map{ |k, v|  ["#{v[:iso_code]} - #{v[:symbol]}", k] }, prompt: t("evm.currency"), no_label: true, selected: @project.currency || 'usd' %>
    </p>
  </div>

  <%#= f.hidden_field :visible_fields, id: :visible_fields %>
  </fieldset>

<% if @project.new_record? %>
<fieldset class="tabular"><legend><%= l(:label_module_plural) %></legend>
<% Redmine::AccessControl.available_project_modules.each do |m| %>
    <label class="floating">
    <%= check_box_tag 'project[enabled_module_names][]', m, @project.module_enabled?(m), :id => "project_enabled_module_names_#{m}" %>
    <%= l_or_humanize(m, :prefix => "project_module_") %>
    </label>
<% end %>
<%= hidden_field_tag 'project[enabled_module_names][]', '' %>
</fieldset>
<% end %>

<% if @project.new_record? || @project.module_enabled?('issue_tracking') %>
<% unless @trackers.empty? %>
<fieldset class="tabular" id="project_trackers"><legend><%=l(:label_tracker_plural)%></legend>
<% @trackers.each do |tracker| %>
    <label class="floating">
    <%= check_box_tag 'project[tracker_ids][]', tracker.id, @project.trackers.to_a.include?(tracker), :id => nil %>
    <%= tracker %>
    </label>
<% end %>
<%= hidden_field_tag 'project[tracker_ids][]', '' %>
</fieldset>
<% end %>

<% unless @issue_custom_fields.empty? %>
<fieldset class="tabular" id="project_issue_custom_fields"><legend><%=l(:label_custom_field_plural)%></legend>
<% @issue_custom_fields.each do |custom_field| %>
    <label class="floating">
  <%= check_box_tag 'project[issue_custom_field_ids][]', custom_field.id, (@project.all_issue_custom_fields.include? custom_field),
        :disabled => (custom_field.is_for_all? ? "disabled" : nil),
        :id => nil %>
  <%= custom_field_name_tag(custom_field) %>
  </label>
<% end %>
<%= hidden_field_tag 'project[issue_custom_field_ids][]', '' %>
</fieldset>
<% end %>
<% end %>
<!--[eoform:project]-->

<% unless @project.identifier_frozen? %>
  <% content_for :header_tags do %>
    <%= javascript_include_tag 'project_identifier' %>
  <% end %>
<% end %>

<% if !User.current.admin? && @project.inherit_members? && @project.parent && User.current.member_of?(@project.parent) %>
  <%= javascript_tag do %>
    $(document).ready(function() {
      $("#project_inherit_members").change(function(){
        if (!$(this).is(':checked')) {
          if (!confirm("<%= escape_javascript(l(:text_own_membership_delete_confirmation)) %>")) {
            $("#project_inherit_members").attr("checked", true);
          }
        }
      });
    });
  <% end %>
<% end %>

<%= javascript_tag do %>
$(document).ready(function() {
  $('#project_enabled_module_names_issue_tracking').on('change', function(){
    if ($(this).prop('checked')){
      $('#project_trackers, #project_issue_custom_fields').show();
    } else {
      $('#project_trackers, #project_issue_custom_fields').hide();
    }
  }).trigger('change');


  var toggleVisibleFields = function(){
    var field = $("#project_evm_field").find('option:selected').val();
    
    $("[data-visible-field='"+field+"']").prop('checked', false);

    $('[data-visible-field-container="'+field+'"]').hide();

    var fields  = <%= Project.available_fields.to_json.html_safe %>;
    fields.splice( <%= Project.available_fields.to_json.html_safe %>.indexOf(field), 1);
    for(var i = 0 ; i < fields.length; i ++)
      $('[data-visible-field-container="'+fields[i]+'"]').show();
  }

  var toggleVisibleFieldContainer = function(){
    var evmField = $("#project_evm_field").find('option:selected').val();
    $("#evm_field_selector").append($("#"+evmField+"_field_container"));

    $.each(['custom', 'cost'], function(k, f){
      var visibleChecked = $("[data-visible-field='"+f+"']").is(':checked');
      if(visibleChecked)
        $("[data-visible-field-container='"+f+"']").append($("#"+f+"_field_container"));
    });


    $.each(['custom', 'cost'], function(k, f){
      var evmChecked = $("#project_evm_field").find('option:selected').val() == f;
      var visibleChecked = $("[data-visible-field='"+f+"']").is(':checked');
      if(evmChecked || visibleChecked){
        $("#"+f+"_field_container").show();
      }else if(!(evmChecked || visibleChecked)){
        $("#"+f+"_field_container").hide();
      }
    });
  }
  
  $("#custom_field_container, #cost_field_container, #cost_field_container").hide();
  $("#project_evm_field").trigger('change');
  toggleVisibleFieldContainer();
  toggleVisibleFields();

  $(document).on('change', "#project_evm_field", function(e){
    toggleVisibleFields();
    toggleVisibleFieldContainer();
  });

  $(document).on('change', "[data-visible-field]", function(e){
    /*var visibleFields = [];
    $("[data-visible-field]:checked").each(function(){ visibleFields.push($(this).data("visible-field")); });
    $("#visible_fields").val(visibleFields.join(','));*/
    toggleVisibleFieldContainer();
  });
});
<% end %>
