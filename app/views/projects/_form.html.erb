<%= error_messages_for 'project' %>
<% evm_checked_css_class = "last-visible_field-checked-because-of-evm_field" %>
<div class="box tabular">
<!--[form:project]-->
<p><%= f.text_field :name, :required => true, :size => 60 %></p>



<p><%= f.number_field :evm_frequency, required: true, size: 60 %></p>

  <table>
    <thead>
      <tr>
        <th> <%= t("evm.field") %> </th>
        <th> <%= t("evm.visible_field") %> </th>
        <th> <%= t("evm.evm_field") %> </th>
        <th> <%= t("evm.customize") %> </th>
      </tr>
    </thead>
    <tbody>
      <% Project.available_fields.each do | field | %>
        <tr>
          <td>
            <%= t("field_#{field}") %>
          </td>
          <% if @project.id.nil? && field == 'cost' %>
             <td>
                <%= check_box_tag '', field, true, id: "visible_fields_#{field}", data: { visible_field: field } %>
            </td>
            <td>
              <%= f.radio_button :evm_field, field, checked: true, data: { evm_field: field }  %>
            </td>
          <% else %>
            <td>
              <% if @project.evm_field == field %>
                <%= check_box_tag '', field, true, id: "visible_fields_#{field}", data: { visible_field: field }, class: evm_checked_css_class %>
              <% else %>
                <%= check_box_tag '', field, @project.visible_fields.include?(field), id: "visible_fields_#{field}", data: { visible_field: field } %>
              <% end %>
            </td>
            <td>
              <%= f.radio_button :evm_field, field, checked: @project.evm_field == field, data: { evm_field: field }  %>
            </td>
          <% end %>

          <td>
            <% if field == 'custom' %>
              <div id="custom_field_container" style="display: <%= @project.using_custom_unity? ? 'block' : 'none' %>;">
                <%= f.text_field :custom_unity, label: "", size: 60 %>
              </div>
            <% elsif @project.id.nil? && field == 'cost' %>
              <div id="cost_field_container" style="display: <%= @project.using_currency? ? 'block' : 'none' %>;">
                <p><%= f.select :currency, Money::Currency.table.map{ |k, v|  ["#{v[:iso_code]} - #{v[:symbol]}", k] }, prompt: t("evm.currency"), label: "", selected: 'usd' %></p>
              </div>
            <% elsif field == 'cost' %>
              <div id="cost_field_container" style="display: <%= @project.using_currency? ? 'block' : 'none' %>;">
                <p><%= f.select :currency, Money::Currency.table.map{ |k, v|  ["#{v[:iso_code]} - #{v[:symbol]}", k] }, prompt: t("evm.currency"), label: "" %></p>
              </div>
            <% end %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>

<%= f.hidden_field :visible_fields, id: :visible_fields %>



<p><%= f.text_area :description, :rows => 8, :class => 'wiki-edit' %></p>
<p><%= f.text_field :identifier, :required => true, :size => 60, :disabled => @project.identifier_frozen?, :maxlength => Project::IDENTIFIER_MAX_LENGTH %>
<% unless @project.identifier_frozen? %>
  <em class="info"><%= l(:text_length_between, :min => 1, :max => Project::IDENTIFIER_MAX_LENGTH) %> <%= l(:text_project_identifier_info).html_safe %></em>
<% end %></p>
<p><%= f.text_field :homepage, :size => 60 %></p>
<p><%= f.check_box :is_public %></p>

<% unless @project.allowed_parents.compact.empty? %>
    <p><%= label(:project, :parent_id, l(:field_parent)) %><%= parent_project_select_tag(@project) %></p>
<% end %>

<% if @project.safe_attribute? 'inherit_members' %>
<p><%= f.check_box :inherit_members %></p>
<% end %>

<% if @project.safe_attribute?('default_version_id') && (default_version_options = project_default_version_options(@project)).present? %>
  <p><%= f.select :default_version_id, project_default_version_options(@project), :include_blank => true %></p>
<% end %>

<%= wikitoolbar_for 'project_description' %>

<% @project.custom_field_values.each do |value| %>
  <p><%= custom_field_tag_with_label :project, value %></p>
<% end %>
<%= call_hook(:view_projects_form, :project => @project, :form => f) %>
</div>

<% if @project.new_record? %>
<fieldset class="box tabular"><legend><%= l(:label_module_plural) %></legend>
<% Redmine::AccessControl.available_project_modules.each do |m| %>
    <label class="floating">
    <%= check_box_tag 'project[enabled_module_names][]', m, @project.module_enabled?(m), :id => "project_enabled_module_names_#{m}" %>
    <%= l_or_humanize(m, :prefix => "project_module_") %>
    </label>
<% end %>
<%= hidden_field_tag 'project[enabled_module_names][]', '' %>
</fieldset>
<% end %>

<% if @project.new_record? || @project.module_enabled?('issue_tracking') %>
<% unless @trackers.empty? %>
<fieldset class="box tabular" id="project_trackers"><legend><%=l(:label_tracker_plural)%></legend>
<% @trackers.each do |tracker| %>
    <label class="floating">
    <%= check_box_tag 'project[tracker_ids][]', tracker.id, @project.trackers.to_a.include?(tracker), :id => nil %>
    <%= tracker %>
    </label>
<% end %>
<%= hidden_field_tag 'project[tracker_ids][]', '' %>
</fieldset>
<% end %>

<% unless @issue_custom_fields.empty? %>
<fieldset class="box tabular" id="project_issue_custom_fields"><legend><%=l(:label_custom_field_plural)%></legend>
<% @issue_custom_fields.each do |custom_field| %>
    <label class="floating">
  <%= check_box_tag 'project[issue_custom_field_ids][]', custom_field.id, (@project.all_issue_custom_fields.include? custom_field),
        :disabled => (custom_field.is_for_all? ? "disabled" : nil),
        :id => nil %>
  <%= custom_field_name_tag(custom_field) %>
  </label>
<% end %>
<%= hidden_field_tag 'project[issue_custom_field_ids][]', '' %>
</fieldset>
<% end %>
<% end %>
<!--[eoform:project]-->

<% unless @project.identifier_frozen? %>
  <% content_for :header_tags do %>
    <%= javascript_include_tag 'project_identifier' %>
  <% end %>
<% end %>

<% if !User.current.admin? && @project.inherit_members? && @project.parent && User.current.member_of?(@project.parent) %>
  <%= javascript_tag do %>
    $(document).ready(function() {
      $("#project_inherit_members").change(function(){
        if (!$(this).is(':checked')) {
          if (!confirm("<%= escape_javascript(l(:text_own_membership_delete_confirmation)) %>")) {
            $("#project_inherit_members").attr("checked", true);
          }
        }
      });
    });
  <% end %>
<% end %>

<%= javascript_tag do %>
$(document).ready(function() {
  $('#project_enabled_module_names_issue_tracking').on('change', function(){
    if ($(this).prop('checked')){
      $('#project_trackers, #project_issue_custom_fields').show();
    } else {
      $('#project_trackers, #project_issue_custom_fields').hide();
    }
  }).trigger('change');


  var togleContainer = function(field){
    // if(field != 'custom' && field != 'cost') return;
    var fields = ['custom', 'cost'];
    $.each(fields, function(k, f){
      var evmChecked = $("[data-evm-field='"+f+"']").is(':checked');
      var visibleChecked = $("[data-visible-field='"+f+"']").is(':checked');
      if(evmChecked || visibleChecked){
        $("#"+f+"_field_container").slideDown();
      }else if(!(evmChecked || visibleChecked)){
        $("#"+f+"_field_container").slideUp();
      }
    });

  }

  $(document).on('change', "[data-evm-field]", function(e){
    var checkedClass = "<%= evm_checked_css_class %>";
    $("[data-visible-field]."+checkedClass).prop("checked", false).removeClass(checkedClass);
    var field = $(this).data('evm-field');
    $("[data-visible-field='"+field+"']").prop("checked", true).addClass(checkedClass);
    togleContainer(field);
  });

  $(document).on('change', "[data-visible-field]", function(e){
    var visibleFields = [];
    $("[data-visible-field]:checked").each(function(){ visibleFields.push($(this).data("visible-field")); });
    $("#visible_fields").val(visibleFields.join(','));
    togleContainer($(this).data('visible-field'));
  });
});
<% end %>
